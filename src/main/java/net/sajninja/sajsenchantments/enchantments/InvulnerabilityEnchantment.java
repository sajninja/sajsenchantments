package net.sajninja.sajsenchantments.enchantments;

import net.minecraft.util.RandomSource;
import net.minecraft.world.entity.Entity;
import net.minecraft.world.entity.EquipmentSlot;
import net.minecraft.world.entity.LivingEntity;
import net.minecraft.world.item.ItemStack;
import net.minecraft.world.item.enchantment.*;
import org.jetbrains.annotations.NotNull;

import java.util.Map;

public class InvulnerabilityEnchantment extends Enchantment {
    protected InvulnerabilityEnchantment(Rarity rarity, EnchantmentCategory category, EquipmentSlot... slot) {
        super(rarity, category, slot);
    }

    public int getMinCost(int p_45102_) {
        return p_45102_ * 25;
    }

    public int getMaxCost(int p_45105_) {
        return this.getMinCost(p_45105_) + 50;
    }

    @Override
    protected boolean checkCompatibility(Enchantment enchantment) {
        if (enchantment == Enchantments.THORNS) {
            return false;
        }
        return super.checkCompatibility(enchantment);
    }

    //    @Override
//    public void doPostHurt(LivingEntity player, Entity entity, int i) {
//        player.addTag("added_tag");
//        player.invulnerableTime = 100;
//        super.doPostHurt(player, entity, i);
//    }

//    public void doPostHurt(LivingEntity player, @NotNull Entity entity, int p_45217_) {
//        String j = "tag";
//        player.addTag(j);
//    }


    @Override
    public void doPostHurt(LivingEntity player, Entity entity, int i) {
        int invulnerableTime = player.invulnerableTime;
        int var = 40;
        player.invulnerableTime = (invulnerableTime += (var *= i));
//        player.invulnerableTime = 100;
//        String j = "tag";
//        player.addTag(j);
        super.doPostHurt(player, entity, i);
    }



    public int getMaxLevel() {
        return 4;
    }
}